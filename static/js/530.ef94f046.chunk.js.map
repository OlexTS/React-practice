{"version":3,"file":"static/js/530.ef94f046.chunk.js","mappings":"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","sources":["components/Search/Search.jsx","services/getNews.js","components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx","components/ContentNews/ContentNews.jsx","components/ContentInfo/ContentInfo.jsx","components/pages/NewsPage.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst Search = ({ handleSearch }) => {\n  const [ value, setValue ] = useState(\"\");\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n   handleSearch(value);\n  };\n\n  return (\n    <>\n      <form className=\"d-flex mt-2\" role=\"search\" onSubmit={handleSubmit}>\n        <input\n          className=\"form-control me-2 \"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          onChange={handleChange}\n          value={value}\n        />\n        <button className=\"btn btn-outline-success\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\n// class Search extends Component{\n//     state = {\n//         value: ''\n//     }\n//     handleChange = ({ target:{value} }) => {\n//         this.setState({value})\n//     }\n//     handleSubmit = (e) => {\n//         e.preventDefault();\n//         this.props.handleSearch(this.state.value)\n//     }\n//     render() {\n// \t\treturn (\n// \t\t\t<>\n// \t\t\t\t<form\n// \t\t\t\t\tclassName='d-flex mt-2'\n// \t\t\t\t\trole='search'\n// \t\t\t\t\tonSubmit={this.handleSubmit}\n// \t\t\t\t>\n// \t\t\t\t\t<input\n// \t\t\t\t\t\tclassName='form-control me-2 '\n// \t\t\t\t\t\ttype='search'\n// \t\t\t\t\t\tplaceholder='Search'\n// \t\t\t\t\t\taria-label='Search'\n//                         onChange={this.handleChange}\n//                         value={this.state.value}\n// \t\t\t\t\t/>\n// \t\t\t\t\t<button className='btn btn-outline-success' type='submit'>\n// \t\t\t\t\t\tSearch\n// \t\t\t\t\t</button>\n// \t\t\t\t</form>\n// \t\t\t</>\n// \t\t)\n// \t}\n// }\n\nexport default Search;\n","const BASE_URL = 'https://newsapi.org/v2';\nconst API_KEY= '4bd28e5d0fe14c08a7579befa12cb224'\nexport const getNews = (searchNews, page=1) => {\n   return fetch(`${BASE_URL}/everything?q=${searchNews}&page=${page}&apiKey=${API_KEY}`)\n}","const ErrorMessage = ({ children }) => {\n  return (\n    \n      <div className=\"card text-center bg-danger\">\n\n        <div className=\"card-body\">\n          <p className=\"card-text\">{children}</p>\n        </div>\n      </div>\n    \n  );\n};\n\nexport default ErrorMessage","\nconst Loader = () => {\n    return <div className=\"text-center\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n}\nexport default Loader","import { nanoid } from \"nanoid\";\n\nconst ContentNews = ({news, onLoadMore}) => {\n    return <ul>\n          {news.map((el) => {\n            return <li key={nanoid()}>{el.title}</li>;\n          })}\n        <button  onClick={onLoadMore}>Load more</button>\n        </ul>\n}\nexport default ContentNews","import { useEffect, useState } from \"react\";\nimport { getNews } from \"../../services/getNews\";\n\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Loader from \"../Loader/Loader\";\nimport ContentNews from \"../ContentNews/ContentNews\";\nimport { useCustomContext } from \"../../testContext/Context/Context\";\n\n/*\n  |==============================\n  | STATE MACHINE\n  |==============================\n*/\n// const STATUS = {\n//   IDLE: \"idle\",\n//   PENDING: \"pending\",\n//   RESOLVED: \"resolved\",\n//   REJECTED: \"rejected\",\n// };\n// let page = 1;\n// class ContentInfo extends Component {\n//   state = {\n//     news: null,\n//     error: \"\",\n//     status: STATUS.IDLE,\n//   };\n//   componentDidUpdate(prevProps) {\n//     if (prevProps.searchText !== this.props.searchText) {\n//       this.setState({ status: STATUS.PENDING });\n//       setTimeout(() => {\n//         getNews(this.props.searchText)\n//           .then((response) => response.json())\n//           .then((data) => {\n//             if (data.status === \"ok\") {\n//               this.setState({ news: data.articles, status: STATUS.RESOLVED });\n//             } else {\n//               return Promise.reject(data.message);\n//             }\n//           })\n//           .catch((error) => this.setState({ error, status: STATUS.RESOLVED }));\n//       }, 1000);\n//     }\n//   }\n\n//   onLoadMore = () => {\n//     page += 1;\n//     this.setState({ status: STATUS.PENDING });\n\n//     return getNews(this.props.searchText, page)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         this.setState((prevState) => ({\n//           news: [...prevState.news, ...data.articles],\n//           status: STATUS.RESOLVED,\n//         }));\n//       });\n//   };\n//   render() {\n//     const { news, error, status } = this.state;\n//     if (status === STATUS.PENDING) {\n//       return <Loader />;\n//     } else if (status === STATUS.RESOLVED) {\n//       return <ContentNews news={news} onLoadMore={this.onLoadMore} />;\n//     } else if (status === STATUS.REJECTED) {\n//       return <ErrorMessage>{error}</ErrorMessage>;\n//     }\n//   }\n// }\n\n/*\n  |==============================\n  | COMPONENT ON HOOKS\n  |==============================\n*/\n\nconst STATUS = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  REJECTED: \"rejected\",\n  RESOLVED: \"resolved\",\n};\nlet page = 1;\nconst ContentInfo = ({ searchText }) => {\n  const {news, setNews} = useCustomContext();\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(STATUS.IDLE);\n\n  useEffect(() => {\n  news&&setStatus(STATUS.RESOLVED)\n},[news])\n\n  useEffect(() => {\n    if (searchText) {\n      setStatus(STATUS.PENDING);\n      \n      setTimeout(() => {\n        getNews(searchText)\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.status === \"ok\") {\n              setNews(data.articles);\n              setStatus(STATUS.RESOLVED);\n            } else {\n              return Promise.reject(data.message);\n            }\n          })\n          .catch((error) => {\n            setError(error);\n            setStatus(STATUS.REJECTED);\n          });\n        \n      }, 3000);\n    }\n  }, [searchText, setNews]);\n\n  const onLoadMore = (e) => {\n    e.preventDefault()\n    page += 1;\n    // setStatus(STATUS.PENDING);\n\n    return getNews(searchText, page)\n      .then((response) => response.json())\n      .then((data) => {\n        setNews(() => [...news, ...data.articles]);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch((error) => {\n        setError(error);\n        setStatus(STATUS.REJECTED);\n      });\n  };\n\n  if (status === STATUS.PENDING) {\n    return (\n    \n        <Loader />\n      \n    );\n  } else if (status === STATUS.RESOLVED) {\n    return <ContentNews news={news} onLoadMore={onLoadMore} />;\n  } else if (status === STATUS.REJECTED) {\n    return <ErrorMessage>{error}</ErrorMessage>;\n  }\n};\n\n/*\n  |==============================\n  | COMPONENT ON CLASSES\n  |==============================\n*/\n\n// let page = 1\n// class ContentInfo extends Component {\n//   state = {\n//     news: null,\n//     isLoading: false,\n//     error: ''\n//   };\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevProps.searchText !== this.props.searchText) {\n//       this.setState({ isLoading: true });\n//       setTimeout(() => {\n//         getNews(this.props.searchText)\n//           .then((response) => response.json())\n//           .then((data) => {\n//             if (data.status === 'ok') {\n//               this.setState({ news: data.articles })\n//             }\n//             else { return Promise.reject(data.message) }\n//           }).catch(error=>this.setState({error}))\n//           .finally(this.setState(() => ({ isLoading: false })));\n//       }, 3000);\n//     }\n//   }\n//     onLoadMore = () => {\n//     page += 1;\n//     this.setState({ isLoading: true });\n\n//     return getNews(this.props.searchText, page)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         this.setState((prevState) => ({\n//           news: [...prevState.news, ...data.articles],\n//           isLoading:false,\n//         }));\n//       }).catch(error=>this.setState({error: true}));\n//   };\n//   render() {\n//     const { news, isLoading, error } = this.state;\n\n//     return (\n//       <>\n//         {error && <ErrorMessage>{error}</ErrorMessage>}\n//         {isLoading && <Loader/>}\n\n//           {news &&\n//             <ContentNews news={ news} onLoadMore={this.onLoadMore} />}\n\n//       </>\n//     );\n//   }\n// }\n\nexport default ContentInfo;\n","import React, { useState } from 'react'\nimport Search from '../Search/Search'\nimport ContentInfo from '../ContentInfo/ContentInfo'\n\nconst NewsPage = () => {\n  const [searchText, setSearchText] = useState(\"\");\n\n    const handleSearch = (searchText) => setSearchText(searchText);\n\n  return (\n    <div><Search handleSearch={handleSearch} />\n      <ContentInfo searchText={searchText} /></div>\n  )\n}\n\nexport default NewsPage"],"names":["_ref","handleSearch","value","setValue","useState","_jsx","_Fragment","children","_jsxs","className","role","onSubmit","e","preventDefault","type","placeholder","onChange","_ref2","target","getNews","searchNews","page","arguments","length","undefined","fetch","concat","Loader","news","onLoadMore","map","el","title","nanoid","onClick","STATUS","searchText","setNews","useCustomContext","error","setError","status","setStatus","useEffect","setTimeout","then","response","json","data","Promise","reject","message","articles","catch","ContentNews","ErrorMessage","NewsPage","setSearchText","Search","ContentInfo"],"sourceRoot":""}