{"version":3,"file":"static/js/407.dee78c5f.chunk.js","mappings":"oLAQA,MA6CA,EA7CqBA,KAEnB,MAAM,SAACC,EAAQ,MAAEC,EAAK,UAAEC,IAAcC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMJ,WAC7DK,GAAWC,EAAAA,EAAAA,MAIjB,OAHAC,EAAAA,EAAAA,YAAU,KACRF,GAASG,EAAAA,EAAAA,MAAmB,GAC3B,CAACH,KAEFI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAEGT,IACCU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiBC,KAAK,SAAQH,UAC3CC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBF,SAAC,iBAGrCX,IACCY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBF,UACpCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKF,SACjBX,EAASe,KAAIC,IAAA,IAAC,GAAEC,EAAE,MAAEC,EAAK,YAAEC,EAAW,OAAEC,EAAM,MAAEC,GAAOL,EAAA,OACtDJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKF,UAClBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,OAAOS,MAAO,CAAEC,MAAO,SAAUZ,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,OAAKY,IAAKJ,EAAO,GAAIP,UAAU,eAAeY,IAAKP,KACnDT,EAAAA,EAAAA,MAAA,OAAKI,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SAAEO,KAC5BT,EAAAA,EAAAA,MAAA,KAAGI,UAAU,YAAWF,SAAA,CAAEU,EAAM,SAChCT,EAAAA,EAAAA,KAAA,KAAGC,UAAU,YAAWF,SAAEQ,KAC1BP,EAAAA,EAAAA,KAAA,UACEC,UAAU,iBACVa,QAASA,IAAIrB,GAASsB,EAAAA,EAAAA,IAAoBV,IAAKN,SAChD,kBAVmBM,EAepB,QAMbhB,IAASW,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACb,C","sources":["components/pages/ProductsPage.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getProductsThunk,\n  deleteProductsThunk,\n} from \"../../redux/products/thunk\";\n// import { productsSelector } from \"../../redux/products/selectors\";\n\nconst ProductsPage = () => {\n//   const products = useSelector(productsSelector);\n  const {products, error, isLoading } = useSelector((state) => state.products);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProductsThunk());\n  }, [dispatch]);\n  return (\n    <>\n      {/* {delInfo.isLoading && <h1>Deleting...</h1>} */}\n      {isLoading && (\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      )}\n      {products && (\n        <div className=\"container text-center\">\n          <div className=\"row\">\n            {products.map(({ id, title, description, images, price }) => (\n              <div className=\"col\" key={id}>\n                <div className=\"card\" style={{ width: \"18rem\" }}>\n                  <img src={images[0]} className=\"card-img-top\" alt={title} />\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{title}</h5>\n                    <p className=\"card-text\">{price} $</p>\n                    <p className=\"card-text\">{description}</p>\n                    <button\n                      className=\"btn btn-danger\"\n                      onClick={()=>dispatch(deleteProductsThunk(id))}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {error && <h2>error</h2>}\n    </>\n  );\n};\n\nexport default ProductsPage;\n"],"names":["ProductsPage","products","error","isLoading","useSelector","state","dispatch","useDispatch","useEffect","getProductsThunk","_jsxs","_Fragment","children","_jsx","className","role","map","_ref","id","title","description","images","price","style","width","src","alt","onClick","deleteProductsThunk"],"sourceRoot":""}