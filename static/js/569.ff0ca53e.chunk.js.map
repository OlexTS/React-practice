{"version":3,"file":"static/js/569.ff0ca53e.chunk.js","mappings":"kKAEA,MAiEA,EAjEeA,IAAuB,IAAtB,aAAEC,GAAcD,EAC9B,MAAQE,EAAOC,IAAaC,EAAAA,EAAAA,UAAS,IASrC,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAcC,KAAK,SAASC,SAP1BC,IACpBA,EAAEC,iBACHZ,EAAaC,EAAM,EAKmDK,SAAA,EACjEF,EAAAA,EAAAA,KAAA,SACEI,UAAU,qBACVK,KAAK,SACLC,YAAY,SACZ,aAAW,SACXC,SAhBaC,IAA4B,IAAzBC,QAAQ,MAAEhB,IAASe,EACzCd,EAASD,EAAM,EAgBTA,MAAOA,KAETG,EAAAA,EAAAA,KAAA,UAAQI,UAAU,0BAA0BK,KAAK,SAAQP,SAAC,eAI3D,E,aC3BP,MAaA,EAbqBP,IAAmB,IAAlB,SAAEO,GAAUP,EAChC,OAEIK,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BF,UAEzCF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAWF,UACxBF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,YAAWF,SAAEA,OAExB,ECAZ,EAPeY,KACJd,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,UAC7BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAiBC,KAAK,SAAQH,UAC3CF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,kBAAiBF,SAAC,mB,aCF9C,MAQA,EARoBP,IAAyB,IAAxB,KAACoB,EAAI,WAAEC,GAAWrB,EACnC,OAAOQ,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CACAa,EAAKE,KAAKC,IACFlB,EAAAA,EAAAA,KAAA,MAAAE,SAAoBgB,EAAGC,QAAdC,EAAAA,EAAAA,UAEpBpB,EAAAA,EAAAA,KAAA,UAASqB,QAASL,EAAWd,SAAC,gBACzB,E,aCGb,MAAMoB,EAEK,UAFLA,EAGM,WAHNA,EAIO,YAGb,MAuFA,EAvFoB3B,IAAqB,IAApB,WAAE4B,GAAY5B,EACjC,MAAM6B,GAAWC,EAAAA,EAAAA,OACX,KAAEV,EAAI,OAAEW,EAAM,MAAEC,IAAUC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMd,OAkB7D,OAjBAe,EAAAA,EAAAA,YAAU,KACRN,GAASO,EAAAA,EAAAA,KAAe,GACvB,CAACP,KACJM,EAAAA,EAAAA,YAAU,KACHP,GACLC,GAASQ,EAAAA,EAAAA,GAAmBT,EATrB,GASuC,GAC7C,CAACC,EAAUD,IAWVG,IAAWJ,GACNtB,EAAAA,EAAAA,KAACc,EAAM,IACLY,IAAWJ,GACbtB,EAAAA,EAAAA,KAACiC,EAAW,CAAClB,KAAMA,IACjBW,IAAWJ,GACbtB,EAAAA,EAAAA,KAACkC,EAAY,CAAAhC,SAAEyB,SADjB,CAEP,EC3BF,EAbiBQ,KACf,MAAOZ,EAAYa,IAAiBrC,EAAAA,EAAAA,UAAS,IAI7C,OACEI,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACqC,EAAM,CAACzC,aAJU2B,GAAea,EAAcb,MAK/CvB,EAAAA,EAAAA,KAACsC,EAAW,CAACf,WAAYA,MACrB,C","sources":["components/Search/Search.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx","components/ContentNews/ContentNews.jsx","components/ContentInfo/ContentInfo.jsx","components/pages/NewsPage.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst Search = ({ handleSearch }) => {\n  const [ value, setValue ] = useState(\"\");\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n   handleSearch(value);\n  };\n\n  return (\n    <>\n      <form className=\"d-flex mt-2\" role=\"search\" onSubmit={handleSubmit}>\n        <input\n          className=\"form-control me-2 \"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          onChange={handleChange}\n          value={value}\n        />\n        <button className=\"btn btn-outline-success\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\n// class Search extends Component{\n//     state = {\n//         value: ''\n//     }\n//     handleChange = ({ target:{value} }) => {\n//         this.setState({value})\n//     }\n//     handleSubmit = (e) => {\n//         e.preventDefault();\n//         this.props.handleSearch(this.state.value)\n//     }\n//     render() {\n// \t\treturn (\n// \t\t\t<>\n// \t\t\t\t<form\n// \t\t\t\t\tclassName='d-flex mt-2'\n// \t\t\t\t\trole='search'\n// \t\t\t\t\tonSubmit={this.handleSubmit}\n// \t\t\t\t>\n// \t\t\t\t\t<input\n// \t\t\t\t\t\tclassName='form-control me-2 '\n// \t\t\t\t\t\ttype='search'\n// \t\t\t\t\t\tplaceholder='Search'\n// \t\t\t\t\t\taria-label='Search'\n//                         onChange={this.handleChange}\n//                         value={this.state.value}\n// \t\t\t\t\t/>\n// \t\t\t\t\t<button className='btn btn-outline-success' type='submit'>\n// \t\t\t\t\t\tSearch\n// \t\t\t\t\t</button>\n// \t\t\t\t</form>\n// \t\t\t</>\n// \t\t)\n// \t}\n// }\n\nexport default Search;\n","const ErrorMessage = ({ children }) => {\n  return (\n    \n      <div className=\"card text-center bg-danger\">\n\n        <div className=\"card-body\">\n          <p className=\"card-text\">{children}</p>\n        </div>\n      </div>\n    \n  );\n};\n\nexport default ErrorMessage","\nconst Loader = () => {\n    return <div className=\"text-center\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n}\nexport default Loader","import { nanoid } from \"nanoid\";\n\nconst ContentNews = ({news, onLoadMore}) => {\n    return <ul>\n          {news.map((el) => {\n            return <li key={nanoid()}>{el.title}</li>;\n          })}\n        <button  onClick={onLoadMore}>Load more</button>\n        </ul>\n}\nexport default ContentNews","import { useEffect } from \"react\";\n// import { getNews } from \"../../services/getNews\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Loader from \"../Loader/Loader\";\nimport ContentNews from \"../ContentNews/ContentNews\";\n// import { useCustomContext } from \"../../testContext/Context/Context\";\nimport { getNewsSearchThunk, getNewsThunk } from \"../../redux/news/thunk\";\n\n\n\nconst STATUS = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  REJECTED: \"rejected\",\n  FULFILLED: \"fulfilled\",\n};\nlet page = 1;\nconst ContentInfo = ({ searchText }) => {\n  const dispatch = useDispatch();\n  const { news, status, error } = useSelector((state) => state.news);\n  useEffect(() => {\n    dispatch(getNewsThunk());\n  }, [dispatch]);\n  useEffect(() => {\n    if (!searchText) return;\n    dispatch(getNewsSearchThunk(searchText, page));\n  }, [dispatch, searchText]);\n\n\n  // const onLoadMore = (e) => {\n  //   e.preventDefault();\n  //   page += 1;\n  //  console.log(page);\n  //   return dispatch(getNewsSearchThunk(searchText, page));\n\n  // };\n\n  if (status === STATUS.PENDING) {\n    return <Loader />;\n  } else if (status === STATUS.FULFILLED) {\n    return <ContentNews news={news} />;\n  } else if (status === STATUS.REJECTED) {\n    return <ErrorMessage>{error}</ErrorMessage>;\n  }\n};\n\n/*\n  |==============================\n  | COMPONENT ON CLASSES\n  |==============================\n*/\n\n// let page = 1\n// class ContentInfo extends Component {\n//   state = {\n//     news: null,\n//     isLoading: false,\n//     error: ''\n//   };\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevProps.searchText !== this.props.searchText) {\n//       this.setState({ isLoading: true });\n//       setTimeout(() => {\n//         getNews(this.props.searchText)\n//           .then((response) => response.json())\n//           .then((data) => {\n//             if (data.status === 'ok') {\n//               this.setState({ news: data.articles })\n//             }\n//             else { return Promise.reject(data.message) }\n//           }).catch(error=>this.setState({error}))\n//           .finally(this.setState(() => ({ isLoading: false })));\n//       }, 3000);\n//     }\n//   }\n//     onLoadMore = () => {\n//     page += 1;\n//     this.setState({ isLoading: true });\n\n//     return getNews(this.props.searchText, page)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         this.setState((prevState) => ({\n//           news: [...prevState.news, ...data.articles],\n//           isLoading:false,\n//         }));\n//       }).catch(error=>this.setState({error: true}));\n//   };\n//   render() {\n//     const { news, isLoading, error } = this.state;\n\n//     return (\n//       <>\n//         {error && <ErrorMessage>{error}</ErrorMessage>}\n//         {isLoading && <Loader/>}\n\n//           {news &&\n//             <ContentNews news={ news} onLoadMore={this.onLoadMore} />}\n\n//       </>\n//     );\n//   }\n// }\n\nexport default ContentInfo;\n","import React, { useState } from \"react\";\nimport Search from \"../Search/Search\";\nimport ContentInfo from \"../ContentInfo/ContentInfo\";\n\nconst NewsPage = () => {\n  const [searchText, setSearchText] = useState(\"\");\n\n  const handleSearch = (searchText) => setSearchText(searchText);\n\n  return (\n    <div>\n      <Search handleSearch={handleSearch} />\n      <ContentInfo searchText={searchText} />\n    </div>\n  );\n};\n\nexport default NewsPage;\n"],"names":["_ref","handleSearch","value","setValue","useState","_jsx","_Fragment","children","_jsxs","className","role","onSubmit","e","preventDefault","type","placeholder","onChange","_ref2","target","Loader","news","onLoadMore","map","el","title","nanoid","onClick","STATUS","searchText","dispatch","useDispatch","status","error","useSelector","state","useEffect","getNewsThunk","getNewsSearchThunk","ContentNews","ErrorMessage","NewsPage","setSearchText","Search","ContentInfo"],"sourceRoot":""}